using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using System;

 namespace Structs
 {
     public record Vector3
      {
       
          public double a { set; get; }
           public double b { set; get; }
             public double c { set; get; }

        //Конструктор
               public Vector3(double A, double B, double C) => (a, b, c) = (A, B, C); 
               public override string ToString() => "({a}, {b}, {c})";

        //Дополняем
                public static Vector3 operator +(Vector3 x, Vector3 y)
                                  => new Vector3(x.a + y.a, x.b + y.b, x.c + y.c);

        //вычитаем вектора
                public static Vector3 operator -(Vector3 x, Vector3 y)
               {
                 return new Vector3(x.a - y.a, x.b - y.b, x.c - y.c);
               }  

        //Умножение векторов
                 public static Vector3 operator *(Vector3 x, Vector3 y)
                {
                  return new Vector3(x.a * y.a, x.b * y.b, x.c * y.c);
                }

        //Деление vector3 на x number
                 public static Vector3 operator *(Vector3 x, int h)
                {
                  return new Vector3(x.a * h, x.b * h, x.c * h);
                }

        //Деление 2
                 public static Vector3 operator /(Vector3 x, int h)
               {
                  return new Vector3(x.a/ h, x.b / h, x.c / h);
                }

        
        public Vector3 Normal()
          {
                double m = Math.Sqrt(a* a + b * b + c * c);
                 return new Vector3(a / m, b / m, c / m);
          }

        //Длина  вектора
                  public double GetLength()
                {
                  double l = Math.Sqrt(a* a + b * b + c * c);
                    return l;
                }
         }
    }
